# This file was automagically generated by mbed.org. For more information, 
# see http://mbed.org/handbook/Exporting-to-GCC-ARM-Embedded

###############################################################################
# Boiler-plate

# cross-platform directory manipulation
ifeq ($(shell echo $$OS),$$OS)
    MAKEDIR = if not exist "$(1)" mkdir "$(1)"
    RM = rmdir /S /Q "$(1)"
else
    MAKEDIR = '$(SHELL)' -c "mkdir -p \"$(1)\""
    RM = '$(SHELL)' -c "rm -rf \"$(1)\""
endif

OBJDIR := BUILD
# Move to the build directory
ifeq (,$(filter $(OBJDIR),$(notdir $(CURDIR))))
.SUFFIXES:
mkfile_path := $(abspath $(lastword $(MAKEFILE_LIST)))
MAKETARGET = '$(MAKE)' --no-print-directory -C $(OBJDIR) -f '$(mkfile_path)' \
		'SRCDIR=$(CURDIR)' $(MAKECMDGOALS)
.PHONY: $(OBJDIR) clean
all:
	+@$(call MAKEDIR,$(OBJDIR))
	+@$(MAKETARGET)
$(OBJDIR): all
Makefile : ;
% :: $(OBJDIR) ; :
clean :
	$(call RM,$(OBJDIR))

else

# trick rules into thinking we are in the root, when we are in the bulid dir
VPATH = ..

# Boiler-plate
###############################################################################
# Project settings

PROJECT := Mbed_Contest_cdi


# Project settings
###############################################################################
# Objects and Paths

OBJECTS += AES/AES.o
OBJECTS += CRC/crc.o
OBJECTS += MQTT/MQTTPacket/MQTTConnectClient.o
OBJECTS += MQTT/MQTTPacket/MQTTConnectServer.o
OBJECTS += MQTT/MQTTPacket/MQTTDeserializePublish.o
OBJECTS += MQTT/MQTTPacket/MQTTPacket.o
OBJECTS += MQTT/MQTTPacket/MQTTSerializePublish.o
OBJECTS += MQTT/MQTTPacket/MQTTSubscribeClient.o
OBJECTS += MQTT/MQTTPacket/MQTTSubscribeServer.o
OBJECTS += MQTT/MQTTPacket/MQTTUnsubscribeClient.o
OBJECTS += MQTT/MQTTPacket/MQTTUnsubscribeServer.o
OBJECTS += UDAES/udaes.o
OBJECTS += WIZnetInterface/EthernetInterface.o
OBJECTS += WIZnetInterface/Socket/DHCPClient.o
OBJECTS += WIZnetInterface/Socket/DNSClient.o
OBJECTS += WIZnetInterface/Socket/Endpoint.o
OBJECTS += WIZnetInterface/Socket/Socket.o
OBJECTS += WIZnetInterface/Socket/TCPSocketConnection.o
OBJECTS += WIZnetInterface/Socket/TCPSocketServer.o
OBJECTS += WIZnetInterface/Socket/UDPSocket.o
OBJECTS += WIZnetInterface/arch/ext/W5500.o
OBJECTS += WIZnetInterface/arch/int/W7500x_toe.o
OBJECTS += main.o
OBJECTS += mbed-src/common/BusIn.o
OBJECTS += mbed-src/common/BusInOut.o
OBJECTS += mbed-src/common/BusOut.o
OBJECTS += mbed-src/common/CAN.o
OBJECTS += mbed-src/common/CallChain.o
OBJECTS += mbed-src/common/Ethernet.o
OBJECTS += mbed-src/common/FileBase.o
OBJECTS += mbed-src/common/FileLike.o
OBJECTS += mbed-src/common/FilePath.o
OBJECTS += mbed-src/common/FileSystemLike.o
OBJECTS += mbed-src/common/I2C.o
OBJECTS += mbed-src/common/I2CSlave.o
OBJECTS += mbed-src/common/InterruptIn.o
OBJECTS += mbed-src/common/InterruptManager.o
OBJECTS += mbed-src/common/LocalFileSystem.o
OBJECTS += mbed-src/common/RawSerial.o
OBJECTS += mbed-src/common/SPI.o
OBJECTS += mbed-src/common/SPISlave.o
OBJECTS += mbed-src/common/Serial.o
OBJECTS += mbed-src/common/SerialBase.o
OBJECTS += mbed-src/common/Stream.o
OBJECTS += mbed-src/common/Ticker.o
OBJECTS += mbed-src/common/Timeout.o
OBJECTS += mbed-src/common/Timer.o
OBJECTS += mbed-src/common/TimerEvent.o
OBJECTS += mbed-src/common/assert.o
OBJECTS += mbed-src/common/board.o
OBJECTS += mbed-src/common/error.o
OBJECTS += mbed-src/common/gpio.o
OBJECTS += mbed-src/common/lp_ticker_api.o
OBJECTS += mbed-src/common/mbed_interface.o
OBJECTS += mbed-src/common/pinmap_common.o
OBJECTS += mbed-src/common/retarget.o
OBJECTS += mbed-src/common/rtc_time.o
OBJECTS += mbed-src/common/semihost_api.o
OBJECTS += mbed-src/common/ticker_api.o
OBJECTS += mbed-src/common/us_ticker_api.o
OBJECTS += mbed-src/common/wait_api.o
OBJECTS += mbed-src/targets/cmsis/TARGET_WIZNET/TARGET_W7500x/TARGET_WIZwiki_W7500/TOOLCHAIN_GCC_ARM/startup_W7500.o
OBJECTS += mbed-src/targets/cmsis/TARGET_WIZNET/TARGET_W7500x/cmsis_nvic.o
OBJECTS += mbed-src/targets/cmsis/TARGET_WIZNET/TARGET_W7500x/system_W7500x.o
OBJECTS += mbed-src/targets/hal/TARGET_WIZNET/TARGET_W7500x/TARGET_WIZwiki_W7500/PeripheralPins.o
OBJECTS += mbed-src/targets/hal/TARGET_WIZNET/TARGET_W7500x/W7500x_Peripheral_Library/W7500x_adc.o
OBJECTS += mbed-src/targets/hal/TARGET_WIZNET/TARGET_W7500x/W7500x_Peripheral_Library/W7500x_crg.o
OBJECTS += mbed-src/targets/hal/TARGET_WIZNET/TARGET_W7500x/W7500x_Peripheral_Library/W7500x_dualtimer.o
OBJECTS += mbed-src/targets/hal/TARGET_WIZNET/TARGET_W7500x/W7500x_Peripheral_Library/W7500x_exti.o
OBJECTS += mbed-src/targets/hal/TARGET_WIZNET/TARGET_W7500x/W7500x_Peripheral_Library/W7500x_gpio.o
OBJECTS += mbed-src/targets/hal/TARGET_WIZNET/TARGET_W7500x/W7500x_Peripheral_Library/W7500x_i2c.o
OBJECTS += mbed-src/targets/hal/TARGET_WIZNET/TARGET_W7500x/W7500x_Peripheral_Library/W7500x_pwm.o
OBJECTS += mbed-src/targets/hal/TARGET_WIZNET/TARGET_W7500x/W7500x_Peripheral_Library/W7500x_uart.o
OBJECTS += mbed-src/targets/hal/TARGET_WIZNET/TARGET_W7500x/analogin_api.o
OBJECTS += mbed-src/targets/hal/TARGET_WIZNET/TARGET_W7500x/gpio_api.o
OBJECTS += mbed-src/targets/hal/TARGET_WIZNET/TARGET_W7500x/gpio_irq_api.o
OBJECTS += mbed-src/targets/hal/TARGET_WIZNET/TARGET_W7500x/i2c_api.o
OBJECTS += mbed-src/targets/hal/TARGET_WIZNET/TARGET_W7500x/mbed_overrides.o
OBJECTS += mbed-src/targets/hal/TARGET_WIZNET/TARGET_W7500x/pinmap.o
OBJECTS += mbed-src/targets/hal/TARGET_WIZNET/TARGET_W7500x/port_api.o
OBJECTS += mbed-src/targets/hal/TARGET_WIZNET/TARGET_W7500x/pwmout_api.o
OBJECTS += mbed-src/targets/hal/TARGET_WIZNET/TARGET_W7500x/rtc_api.o
OBJECTS += mbed-src/targets/hal/TARGET_WIZNET/TARGET_W7500x/serial_api.o
OBJECTS += mbed-src/targets/hal/TARGET_WIZNET/TARGET_W7500x/sleep.o
OBJECTS += mbed-src/targets/hal/TARGET_WIZNET/TARGET_W7500x/spi_api.o
OBJECTS += mbed-src/targets/hal/TARGET_WIZNET/TARGET_W7500x/us_ticker.o


INCLUDE_PATHS += -I../
INCLUDE_PATHS += -I../.
INCLUDE_PATHS += -I../AES
INCLUDE_PATHS += -I../CRC
INCLUDE_PATHS += -I../MQTT
INCLUDE_PATHS += -I../MQTT/FP
INCLUDE_PATHS += -I../MQTT/MQTTPacket
INCLUDE_PATHS += -I../MQTT/MQTTPacket/samples
INCLUDE_PATHS += -I../MQTT/MQTTPacket/test
INCLUDE_PATHS += -I../UDAES
INCLUDE_PATHS += -I../WIZnetInterface
INCLUDE_PATHS += -I../WIZnetInterface/Socket
INCLUDE_PATHS += -I../WIZnetInterface/arch
INCLUDE_PATHS += -I../WIZnetInterface/arch/ext
INCLUDE_PATHS += -I../WIZnetInterface/arch/int
INCLUDE_PATHS += -I../mbed-src
INCLUDE_PATHS += -I../mbed-src/api
INCLUDE_PATHS += -I../mbed-src/common
INCLUDE_PATHS += -I../mbed-src/hal
INCLUDE_PATHS += -I../mbed-src/targets
INCLUDE_PATHS += -I../mbed-src/targets/cmsis
INCLUDE_PATHS += -I../mbed-src/targets/cmsis/TARGET_WIZNET
INCLUDE_PATHS += -I../mbed-src/targets/cmsis/TARGET_WIZNET/TARGET_W7500x
INCLUDE_PATHS += -I../mbed-src/targets/cmsis/TARGET_WIZNET/TARGET_W7500x/TARGET_WIZwiki_W7500
INCLUDE_PATHS += -I../mbed-src/targets/cmsis/TARGET_WIZNET/TARGET_W7500x/TARGET_WIZwiki_W7500/TOOLCHAIN_GCC_ARM
INCLUDE_PATHS += -I../mbed-src/targets/cmsis/TOOLCHAIN_GCC
INCLUDE_PATHS += -I../mbed-src/targets/hal
INCLUDE_PATHS += -I../mbed-src/targets/hal/TARGET_WIZNET
INCLUDE_PATHS += -I../mbed-src/targets/hal/TARGET_WIZNET/TARGET_W7500x
INCLUDE_PATHS += -I../mbed-src/targets/hal/TARGET_WIZNET/TARGET_W7500x/TARGET_WIZwiki_W7500
INCLUDE_PATHS += -I../mbed-src/targets/hal/TARGET_WIZNET/TARGET_W7500x/W7500x_Peripheral_Library

LIBRARY_PATHS :=
LIBRARIES :=
LINKER_SCRIPT ?= ../mbed-src/targets/cmsis/TARGET_WIZNET/TARGET_W7500x/TARGET_WIZwiki_W7500/TOOLCHAIN_GCC_ARM/W7500.ld

# Objects and Paths
###############################################################################
# Tools and Flags

AS      = 'arm-none-eabi-gcc' '-x' 'assembler-with-cpp' '-c' '-Wall' '-Wextra' '-Wno-unused-parameter' '-Wno-missing-field-initializers' '-fmessage-length=0' '-fno-exceptions' '-fno-builtin' '-ffunction-sections' '-fdata-sections' '-funsigned-char' '-MMD' '-fno-delete-null-pointer-checks' '-fomit-frame-pointer' '-Os' '-mcpu=cortex-m0' '-mthumb'
CC      = 'arm-none-eabi-gcc' '-std=gnu99' '-c' '-Wall' '-Wextra' '-Wno-unused-parameter' '-Wno-missing-field-initializers' '-fmessage-length=0' '-fno-exceptions' '-fno-builtin' '-ffunction-sections' '-fdata-sections' '-funsigned-char' '-MMD' '-fno-delete-null-pointer-checks' '-fomit-frame-pointer' '-Os' '-mcpu=cortex-m0' '-mthumb'
CPP     = 'arm-none-eabi-g++' '-std=gnu++98' '-fno-rtti' '-Wvla' '-c' '-Wall' '-Wextra' '-Wno-unused-parameter' '-Wno-missing-field-initializers' '-fmessage-length=0' '-fno-exceptions' '-fno-builtin' '-ffunction-sections' '-fdata-sections' '-funsigned-char' '-MMD' '-fno-delete-null-pointer-checks' '-fomit-frame-pointer' '-Os' '-mcpu=cortex-m0' '-mthumb'
LD      = 'arm-none-eabi-gcc'
ELF2BIN = 'arm-none-eabi-objcopy'
PREPROC = 'arm-none-eabi-cpp' '-E' '-P' '-Wl,--gc-sections' '-Wl,--wrap,main' '-Wl,--wrap,_malloc_r' '-Wl,--wrap,_free_r' '-Wl,--wrap,_realloc_r' '-Wl,--wrap,_memalign_r' '-Wl,--wrap,_calloc_r' '-Wl,--wrap,exit' '-Wl,--wrap,atexit' '-Wl,-n' '-mcpu=cortex-m0' '-mthumb'


C_FLAGS += -std=gnu99
C_FLAGS += -DCMSIS_VECTAB_VIRTUAL
C_FLAGS += -D__MBED__=1
C_FLAGS += -DTARGET_LIKE_MBED
C_FLAGS += -DDEVICE_PORTINOUT=1
C_FLAGS += -DMBED_BUILD_TIMESTAMP=1506504736.13
C_FLAGS += -DTOOLCHAIN_object
C_FLAGS += -D__CMSIS_RTOS
C_FLAGS += -DTARGET_WIZwiki_W7500
C_FLAGS += -DTOOLCHAIN_GCC
C_FLAGS += -DTARGET_W7500x
C_FLAGS += -DARM_MATH_CM0
C_FLAGS += -DTARGET_UVISOR_UNSUPPORTED
C_FLAGS += -DTARGET_M0
C_FLAGS += -DTARGET_WIZWIKI_W7500
C_FLAGS += -DDEVICE_SERIAL=1
C_FLAGS += -DDEVICE_INTERRUPTIN=1
C_FLAGS += -D__CORTEX_M0
C_FLAGS += -DDEVICE_I2C=1
C_FLAGS += -DDEVICE_PORTOUT=1
C_FLAGS += -DDEVICE_STDIO_MESSAGES=1
C_FLAGS += -DDEVICE_PORTIN=1
C_FLAGS += -DTARGET_RELEASE
C_FLAGS += -DTARGET_WIZNET
C_FLAGS += -D__MBED_CMSIS_RTOS_CM
C_FLAGS += -DTARGET_FF_ARDUINO
C_FLAGS += -DTOOLCHAIN_GCC_ARM
C_FLAGS += -DDEVICE_SPI=1
C_FLAGS += -DCMSIS_VECTAB_VIRTUAL_HEADER_FILE=\"cmsis_nvic.h\"
C_FLAGS += -DDEVICE_SPISLAVE=1
C_FLAGS += -DDEVICE_ANALOGIN=1
C_FLAGS += -DDEVICE_PWMOUT=1
C_FLAGS += -DTARGET_LIKE_CORTEX_M0
C_FLAGS += -DTARGET_CORTEX_M
C_FLAGS += -include
C_FLAGS += mbed_config.h

CXX_FLAGS += -std=gnu++98
CXX_FLAGS += -fno-rtti
CXX_FLAGS += -Wvla
CXX_FLAGS += -DCMSIS_VECTAB_VIRTUAL
CXX_FLAGS += -D__MBED__=1
CXX_FLAGS += -DTARGET_LIKE_MBED
CXX_FLAGS += -DDEVICE_PORTINOUT=1
CXX_FLAGS += -DMBED_BUILD_TIMESTAMP=1506504736.13
CXX_FLAGS += -DTOOLCHAIN_object
CXX_FLAGS += -D__CMSIS_RTOS
CXX_FLAGS += -DTARGET_WIZwiki_W7500
CXX_FLAGS += -DTOOLCHAIN_GCC
CXX_FLAGS += -DTARGET_W7500x
CXX_FLAGS += -DARM_MATH_CM0
CXX_FLAGS += -DTARGET_UVISOR_UNSUPPORTED
CXX_FLAGS += -DTARGET_M0
CXX_FLAGS += -DTARGET_WIZWIKI_W7500
CXX_FLAGS += -DDEVICE_SERIAL=1
CXX_FLAGS += -DDEVICE_INTERRUPTIN=1
CXX_FLAGS += -D__CORTEX_M0
CXX_FLAGS += -DDEVICE_I2C=1
CXX_FLAGS += -DDEVICE_PORTOUT=1
CXX_FLAGS += -DDEVICE_STDIO_MESSAGES=1
CXX_FLAGS += -DDEVICE_PORTIN=1
CXX_FLAGS += -DTARGET_RELEASE
CXX_FLAGS += -DTARGET_WIZNET
CXX_FLAGS += -D__MBED_CMSIS_RTOS_CM
CXX_FLAGS += -DTARGET_FF_ARDUINO
CXX_FLAGS += -DTOOLCHAIN_GCC_ARM
CXX_FLAGS += -DDEVICE_SPI=1
CXX_FLAGS += -DCMSIS_VECTAB_VIRTUAL_HEADER_FILE=\"cmsis_nvic.h\"
CXX_FLAGS += -DDEVICE_SPISLAVE=1
CXX_FLAGS += -DDEVICE_ANALOGIN=1
CXX_FLAGS += -DDEVICE_PWMOUT=1
CXX_FLAGS += -DTARGET_LIKE_CORTEX_M0
CXX_FLAGS += -DTARGET_CORTEX_M
CXX_FLAGS += -include
CXX_FLAGS += mbed_config.h

ASM_FLAGS += -x
ASM_FLAGS += assembler-with-cpp
ASM_FLAGS += -D__CORTEX_M0
ASM_FLAGS += -DCMSIS_VECTAB_VIRTUAL
ASM_FLAGS += -DCMSIS_VECTAB_VIRTUAL_HEADER_FILE=\"cmsis_nvic.h\"
ASM_FLAGS += -D__MBED_CMSIS_RTOS_CM
ASM_FLAGS += -DARM_MATH_CM0
ASM_FLAGS += -D__CMSIS_RTOS


LD_FLAGS :=-Wl,--gc-sections -Wl,--wrap,main -Wl,--wrap,_malloc_r -Wl,--wrap,_free_r -Wl,--wrap,_realloc_r -Wl,--wrap,_memalign_r -Wl,--wrap,_calloc_r -Wl,--wrap,exit -Wl,--wrap,atexit -Wl,-n -mcpu=cortex-m0 -mthumb 
LD_SYS_LIBS :=-Wl,--start-group -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys -Wl,--end-group

# Tools and Flags
###############################################################################
# Rules

.PHONY: all lst size


all: $(PROJECT).bin $(PROJECT).hex size


.asm.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Assemble: $(notdir $<)"
	@$(AS) -c $(ASM_FLAGS) $(INCLUDE_PATHS) -o $@ $<

.s.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Assemble: $(notdir $<)"
	@$(AS) -c $(ASM_FLAGS) $(INCLUDE_PATHS) -o $@ $<

.S.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Assemble: $(notdir $<)"
	@$(AS) -c $(ASM_FLAGS) $(INCLUDE_PATHS) -o $@ $<

.c.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Compile: $(notdir $<)"
	@$(CC) $(C_FLAGS) $(INCLUDE_PATHS) -o $@ $<

.cpp.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Compile: $(notdir $<)"
	@$(CPP) $(CXX_FLAGS) $(INCLUDE_PATHS) -o $@ $<


$(PROJECT).link_script.ld: $(LINKER_SCRIPT)
	@$(PREPROC) $< -o $@



$(PROJECT).elf: $(OBJECTS) $(SYS_OBJECTS) $(PROJECT).link_script.ld 
	+@echo "link: $(notdir $@)"
	@$(LD) $(LD_FLAGS) -T $(filter %.ld, $^) $(LIBRARY_PATHS) --output $@ $(filter %.o, $^) $(LIBRARIES) $(LD_SYS_LIBS)


$(PROJECT).bin: $(PROJECT).elf
	$(ELF2BIN) -O binary $< $@
	+@echo "===== bin file ready to flash: $(OBJDIR)/$@ =====" 

$(PROJECT).hex: $(PROJECT).elf
	$(ELF2BIN) -O ihex $< $@


# Rules
###############################################################################
# Dependencies

DEPS = $(OBJECTS:.o=.d) $(SYS_OBJECTS:.o=.d)
-include $(DEPS)
endif

# Dependencies
###############################################################################
